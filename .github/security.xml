<?xml version="1.0" encoding="UTF-8"?>
<document type="security-policy" version="1.0.0">
  <metadata>
    <title>Security Policy</title>
    <created>2025-08-11</created>
    <scope>Repository security guidelines, vulnerability reporting, secrets handling</scope>
    <audience>developers, contributors, security researchers</audience>
    <purpose>Establish secure development practices and incident response procedures</purpose>
  </metadata>

  <vulnerability-reporting>
    <title>Reporting a Vulnerability</title>
    <procedure>
      If you discover a vulnerability or a leaked secret, please open a private issue or contact the repository owner directly. Do not open a public issue with sensitive details.
    </procedure>
  </vulnerability-reporting>

  <secrets-handling>
    <title>Secrets Handling</title>

    <security-requirements>
      <requirement name="no-secrets-in-commits">Never commit API keys or secrets. Use `.env` (git-ignored) with values copied from `.env.example`.</requirement>
      <requirement name="local-scripts-protection">Local-only scripts are placed under `.claude/` and are git-ignored by default.</requirement>
      <requirement name="automated-scanning">GitHub Actions run Gitleaks on pushes and pull requests to help prevent secret leaks.</requirement>
    </security-requirements>
  </secrets-handling>

  <developer-workflow>
    <title>Developer Workflow</title>

    <security-practices>
      <practice name="pre-commit-hooks">
        <installation>Install pre-commit hooks: `pip install -r dev-requirements.txt &amp;&amp; pre-commit install`.</installation>
        <features>Hooks include basic hygiene and `detect-secrets` scanning against the committed baseline.</features>
      </practice>

      <practice name="baseline-management">
        <procedure>Update the baseline when adding new legitimate tokens: `detect-secrets scan &gt; .secrets.baseline &amp;&amp; git add .secrets.baseline`.</procedure>
      </practice>
    </security-practices>
  </developer-workflow>
</document>
