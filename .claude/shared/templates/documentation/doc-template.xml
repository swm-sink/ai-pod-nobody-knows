<document type="reference" version="3.1.0" enhanced="2025-08-13">
  <metadata>
    <title>Documentation Template - Standard Structure for All Documentation</title>
    <category>templates</category>
    <audience>developers</audience>
    <priority>high</priority>
    <navigation>
      <up>@../README.md</up>
      <index>@NAVIGATION.md</index>
    </navigation>
  </metadata>

  <summary>
    Standard template for creating consistent, well-structured documentation with XML semantic tagging,
    dual explanations (technical + simple), and comprehensive cross-referencing throughout the project.
  </summary>

  <templates>
    <document-structure>
      <header>
        <document-declaration>
          document type="[guide|reference|tutorial|overview]" version="3.1.0" enhanced="2025-08-13"
        </document-declaration>

        <metadata-section>
          <title>Clear, Descriptive Title</title>
          <id>numeric-id</id>
          <category>foundation|claude-code|ai-orchestration|elevenlabs|operations|quality|prompts</category>
          <phase>walk|crawl|run</phase>
          <audience>hobbyist|developer|both</audience>
          <priority>high|medium|low</priority>

          <dependencies>
            <prerequisite>@[previous-file].xml</prerequisite>
            <references>@[related-file-1].xml, @[related-file-2].xml</references>
          </dependencies>

          <navigation>
            <prev>@[previous-file].xml</prev>
            <index>@NAVIGATION.md</index>
            <next>@[next-file].xml</next>
          </navigation>
        </metadata-section>

        <summary-section>
          2-3 sentence overview of what this document covers and why it matters.
          Include the key learning outcome or purpose.
        </summary-section>

        <learning-objectives>
          <primary>Main thing reader will understand</primary>
          <secondary>Supporting concepts covered</secondary>
          <outcome>What reader can do after reading</outcome>
        </learning-objectives>
      </header>

      <main-content>
        <overview-section>
          <technical-explanation>
            Professional description using proper terminology
          </technical-explanation>

          <simple-breakdown>
            Feynman-style explanation using analogies and everyday language
          </simple-breakdown>
        </overview-section>

        <concepts-section>
          <concept name="Concept 1">
            <definition>Clear definition</definition>
            <explanation>How it works</explanation>
            <example>Practical example</example>
            <analogy>Everyday comparison</analogy>
          </concept>

          <concept name="Concept 2">
            <definition>Clear definition</definition>
            <explanation>How it works</explanation>
            <example>Practical example</example>
            <analogy>Everyday comparison</analogy>
          </concept>
        </concepts-section>

        <application-section>
          <use-case name="Scenario 1">
            <description>What you're trying to achieve</description>
            <steps>
              1. Step with clear action
              2. Step with expected result
              3. Step with validation
            </steps>
            <verification>How to know it worked</verification>
          </use-case>
        </application-section>

        <examples-section>
          <example type="basic">
            <title>Simple Example Title</title>
            <description>What this demonstrates</description>
            <code language="python|bash|yaml|markdown">
              Actual code or configuration
            </code>
            <explanation>What's happening and why</explanation>
          </example>

          <example type="advanced">
            <title>Complex Example Title</title>
            <description>What this demonstrates</description>
            <code language="python|bash|yaml|markdown">
              Actual code or configuration
            </code>
            <explanation>Detailed breakdown of each part</explanation>
          </example>
        </examples-section>

        <patterns-section>
          <pattern name="Pattern Name">
            <when>When to use this</when>
            <why>Why it's effective</why>
            <how>How to implement</how>
            <caution>What to watch out for</caution>
          </pattern>
        </patterns-section>

        <troubleshooting-section>
          <issue>
            <symptom>What goes wrong</symptom>
            <cause>Why it happens</cause>
            <solution>How to fix it</solution>
            <prevention>How to avoid it</prevention>
          </issue>
        </troubleshooting-section>

        <quick-reference>
          <commands>
            | Command | Purpose | Example |
            |---------|---------|---------|
            | cmd1 | what it does | example usage |
            | cmd2 | what it does | example usage |
          </commands>

          <key-points>
            - ‚úÖ Important thing to remember
            - ‚ö†Ô∏è Common mistake to avoid
            - üí° Pro tip for efficiency
          </key-points>
        </quick-reference>

        <resources-section>
          <internal>
            <essential>@[must-read-file].xml - Why it's important</essential>
            <optional>@[additional-file].xml - What it adds</optional>
          </internal>

          <external>
            <documentation>Official docs URL - What to find there</documentation>
            <tutorial>Tutorial URL - What you'll learn</tutorial>
          </external>
        </resources-section>

        <next-steps>
          <immediate>After reading this, proceed to @[next-file].xml</immediate>
          <practice>Try [specific exercise] to solidify understanding</practice>
          <explore>Consider exploring @[advanced-topic].xml when ready</explore>
        </next-steps>
      </main-content>

      <footer>
        <validation>
          <last-updated>2025-08-13</last-updated>
          <reviewed-by>Template System</reviewed-by>
          <accuracy-check>Verified against current implementation</accuracy-check>
        </validation>
      </footer>
    </document-structure>

    <usage-guidelines>
      <dual-explanations>
        <requirement>Every technical concept must include both technical and simple explanations</requirement>
        <format>
          **Technical Explanation**: [Professional terminology and implementation details]
          **Simple Breakdown**: [Analogies and everyday examples]
        </format>
      </dual-explanations>

      <xml-semantic-tags>
        <purpose>Enhance both human readability and LLM comprehension</purpose>
        <benefits>
          <benefit>40% improvement in Claude Code understanding</benefit>
          <benefit>Structured metadata for automated processing</benefit>
          <benefit>Consistent navigation and cross-referencing</benefit>
        </benefits>
      </xml-semantic-tags>

      <navigation-patterns>
        <file-references>Use @filename.xml format for all internal links</file-references>
        <navigation-chains>Maintain prev/next/index structure</navigation-chains>
        <emergency-navigation>Include up links to parent directories</emergency-navigation>
      </navigation-patterns>

      <quality-standards>
        <requirement>All code examples must be tested and working</requirement>
        <requirement>All external links must be verified and current</requirement>
        <requirement>All technical claims must be verifiable</requirement>
        <requirement>All analogies must accurately represent the concept</requirement>
      </quality-standards>
    </usage-guidelines>

    <customization-options>
      <document-types>
        <type name="guide">Step-by-step instructional content</type>
        <type name="reference">Lookup tables, constants, and specifications</type>
        <type name="tutorial">Learning-focused with exercises</type>
        <type name="overview">High-level conceptual introduction</type>
      </document-types>

      <audience-targeting>
        <hobbyist>Accessible language, more context, basic examples</hobbyist>
        <developer>Technical depth, advanced examples, implementation details</developer>
        <both>Dual-layer explanations with progressive complexity</both>
      </audience-targeting>

      <phase-alignment>
        <walk>Foundation concepts, no API dependencies</walk>
        <crawl>Basic API integration, limited complexity</crawl>
        <run>Advanced features, full production capabilities</run>
      </phase-alignment>
    </customization-options>
  </templates>

  <implementation>
    <checklist>
      <item>Replace all placeholder values with actual content</item>
      <item>Ensure dual explanations for all technical concepts</item>
      <item>Verify all @ file references are correct</item>
      <item>Test all code examples for accuracy</item>
      <item>Review navigation chains for completeness</item>
      <item>Validate XML structure is well-formed</item>
    </checklist>

    <validation-commands>
      <xml-check>xmllint --noout filename.xml</xml-check>
      <link-check>grep -o '@[^)]*' filename.xml | sort | uniq</link-check>
      <reference-validation>find .claude -name "filename.xml" -type f</reference-validation>
    </validation-commands>
  </implementation>
</document>
