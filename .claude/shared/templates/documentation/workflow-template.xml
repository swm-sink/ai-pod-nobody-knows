<document type="reference" version="3.1.0" enhanced="2025-08-13">
  <metadata>
    <title>Workflow Template - Standard Structure for Process Documentation</title>
    <category>templates</category>
    <complexity>moderate</complexity>
    <audience>developers</audience>
    <priority>high</priority>
    <navigation>
      <up>@../README.md</up>
      <index>@NAVIGATION.md</index>
    </navigation>
  </metadata>

  <summary>
    Comprehensive template for documenting workflows with mermaid diagrams, decision points,
    quality gates, automation hooks, and troubleshooting guides for reliable process execution.
  </summary>

  <templates>
    <workflow-structure>
      <header-section>
        <document-declaration>
          document type="workflow" version="3.1.0" enhanced="2025-08-13"
        </document-declaration>

        <metadata>
          <title>Workflow Name</title>
          <category>development|production|quality|operations</category>
          <complexity>simple|moderate|complex</complexity>
          <duration>estimated-time</duration>
          <frequency>daily|weekly|per-episode|as-needed</frequency>

          <navigation>
            <prev>@[previous-workflow].xml</prev>
            <index>@workflows/README.md</index>
            <next>@[next-workflow].xml</next>
          </navigation>
        </metadata>

        <summary>
          2-3 sentence overview of what this workflow accomplishes and when it's used
        </summary>
      </header-section>

      <overview-section>
        <purpose>
          <objective>Primary goal of this workflow</objective>
          <triggers>
            <trigger>Event or condition that starts this workflow</trigger>
            <trigger>Alternative trigger</trigger>
          </triggers>
          <outcomes>
            <outcome>Expected result 1</outcome>
            <outcome>Expected result 2</outcome>
          </outcomes>
        </purpose>
      </overview-section>

      <prerequisites-section>
        <environment>
          <requirement>Required setup or configuration</requirement>
          <requirement>Required tools or access</requirement>
          <requirement>Required knowledge or skills</requirement>
        </environment>

        <dependencies>
          <dependency>@[required-file].xml exists</dependency>
          <dependency>@[required-command].xml available</dependency>
          <dependency>[External service] configured</dependency>
        </dependencies>

        <inputs>
          <input name="Input 1">Format and source</input>
          <input name="Input 2">Format and source</input>
        </inputs>
      </prerequisites-section>

      <workflow-diagram>
        <mermaid-example>
          graph TD
              A[Start] --> B{Validation}
              B -->|Valid| C[Step 1]
              B -->|Invalid| D[Error Handler]
              C --> E[Step 2]
              E --> F{Quality Check}
              F -->|Pass| G[Step 3]
              F -->|Fail| H[Remediation]
              H --> E
              G --> I[Complete]
              D --> J[Log &amp; Alert]
        </mermaid-example>
      </workflow-diagram>

      <detailed-steps>
        <phase name="Initialization">
          <step number="1">
            <action>Validate Prerequisites</action>
            <command>/validate-environment</command>
            <verification>All checks return green</verification>
            <on-failure>Stop and address missing requirements</on-failure>
          </step>

          <step number="2">
            <action>Load Configuration</action>
            <command>/load-config [workflow-name]</command>
            <verification>Config loaded successfully</verification>
            <on-failure>Check config file exists and is valid</on-failure>
          </step>
        </phase>

        <phase name="Main Processing">
          <step number="3">
            <action>Primary processing action</action>
            <command>/[main-command] [arguments]</command>
            <duration>X-Y minutes</duration>
            <verification>How to verify success</verification>
            <on-failure>Recovery procedure</on-failure>
          </step>

          <step number="4">
            <action>Secondary processing action</action>
            <command>/[secondary-command] [arguments]</command>
            <duration>X-Y minutes</duration>
            <verification>How to verify success</verification>
            <on-failure>Recovery procedure</on-failure>
          </step>
        </phase>

        <phase name="Quality Assurance">
          <step number="5">
            <action>Run Quality Checks</action>
            <command>/quality-check [output]</command>
            <thresholds>
              <threshold>Metric 1 ‚â• threshold</threshold>
              <threshold>Metric 2 ‚â• threshold</threshold>
            </thresholds>
            <on-failure>Return to Step 3 with adjustments</on-failure>
          </step>
        </phase>

        <phase name="Finalization">
          <step number="6">
            <action>Generate Output</action>
            <command>/generate-output [format]</command>
            <location>Where output is saved</location>
            <verification>Output file exists and is valid</verification>
          </step>

          <step number="7">
            <action>Update Tracking</action>
            <command>/update-session [workflow-id]</command>
            <metrics>Record time, cost, quality scores</metrics>
          </step>
        </phase>
      </detailed-steps>

      <decision-points>
        <decision point="Quality Gate">
          <condition>Quality score &lt; threshold</condition>
          <options>
            <option choice="Retry">
              <action>Adjust parameters and reprocess</action>
              <max-retries>3</max-retries>
            </option>
            <option choice="Escalate">
              <action>Alert human for manual review</action>
              <notification>Send to Slack/email</notification>
            </option>
            <option choice="Accept">
              <action>Document known issues and proceed</action>
              <requirement>Explicit approval required</requirement>
            </option>
          </options>
        </decision>
      </decision-points>

      <automation-section>
        <current-manual>
          <manual-step>Step that could be automated</manual-step>
          <manual-step>Another manual step</manual-step>
        </current-manual>

        <hooks-available>
          <hook trigger="pre-execution">
            <action>Validate all inputs</action>
            <script>@hooks/validate-inputs.sh</script>
          </hook>

          <hook trigger="post-execution">
            <action>Archive outputs</action>
            <script>@hooks/archive-outputs.sh</script>
          </hook>
        </hooks-available>

        <future-automation>
          <planned>Planned automation 1</planned>
          <planned>Planned automation 2</planned>
        </future-automation>
      </automation-section>

      <monitoring-metrics>
        <key-metrics>
          <metric name="Duration">
            <target>X minutes</target>
            <alert-threshold>Y minutes</alert-threshold>
          </metric>

          <metric name="Success Rate">
            <target>95%</target>
            <calculation>successful runs / total runs</calculation>
          </metric>

          <metric name="Cost">
            <target>$X.XX</target>
            <components>API calls + compute + storage</components>
          </metric>
        </key-metrics>

        <logging>
          <location>.claude/[level]/sessions/[workflow-name]/</location>
          <retention>30 days</retention>
          <format>JSON with timestamps and metrics</format>
        </logging>
      </monitoring-metrics>

      <troubleshooting-guide>
        <common-issues>
          <issue symptom="Workflow hangs at Step 3">
            <diagnosis>Check API connectivity</diagnosis>
            <solution>
              1. Test API endpoint: curl [endpoint]
              2. Verify API keys are valid
              3. Check rate limits
            </solution>
          </issue>

          <issue symptom="Quality checks consistently fail">
            <diagnosis>Parameters may need adjustment</diagnosis>
            <solution>
              1. Review recent quality scores
              2. Adjust thresholds in config
              3. Consider model upgrade
            </solution>
          </issue>
        </common-issues>

        <debugging-tools>
          <tool>Verbose mode: Add --verbose flag</tool>
          <tool>Dry run: Add --dry-run flag</tool>
          <tool>Step mode: Add --step flag for manual progression</tool>
        </debugging-tools>
      </troubleshooting-guide>

      <best-practices>
        <do>
          <practice>‚úÖ Always validate inputs before processing</practice>
          <practice>‚úÖ Save intermediate outputs for debugging</practice>
          <practice>‚úÖ Log all decisions and quality scores</practice>
          <practice>‚úÖ Test with small samples first</practice>
        </do>

        <dont>
          <practice>‚ùå Skip quality checks to save time</practice>
          <practice>‚ùå Ignore warning messages</practice>
          <practice>‚ùå Process without checking prerequisites</practice>
          <practice>‚ùå Modify workflow without testing</practice>
        </dont>

        <tips>
          <tip>üí° Run in dry-run mode for new configurations</tip>
          <tip>üí° Keep backup of last known good configuration</tip>
          <tip>üí° Document any manual interventions</tip>
        </tips>
      </best-practices>

      <related-resources>
        <workflows>
          <workflow>@[related-workflow-1].xml - Relationship</workflow>
          <workflow>@[related-workflow-2].xml - Relationship</workflow>
        </workflows>

        <commands>
          <command>@[command-1].xml - Used in Step 3</command>
          <command>@[command-2].xml - Used in Step 4</command>
        </commands>

        <documentation>
          <doc>@[quality-standards].xml - Quality thresholds</doc>
          <doc>@[troubleshooting-guide].xml - Extended debugging</doc>
        </documentation>
      </related-resources>

      <validation>
        <last-tested>2025-08-13</last-tested>
        <success-rate>95%</success-rate>
        <average-duration>X minutes</average-duration>
        <next-review>2025-09-13</next-review>
      </validation>
    </workflow-structure>

    <usage-guidelines>
      <mermaid-diagrams>
        <purpose>Visual representation of workflow logic and decision points</purpose>
        <best-practices>
          <practice>Use clear, descriptive node labels</practice>
          <practice>Show all major decision points</practice>
          <practice>Include error handling paths</practice>
          <practice>Keep diagrams readable at medium complexity</practice>
        </best-practices>
      </mermaid-diagrams>

      <quality-gates>
        <requirement>Every workflow must have measurable quality checkpoints</requirement>
        <threshold-types>
          <type>Performance metrics (speed, efficiency)</type>
          <type>Quality scores (accuracy, completeness)</type>
          <type>Business metrics (cost, value)</type>
        </threshold-types>
      </quality-gates>

      <automation-hooks>
        <integration>Connect with Claude Code MCP capabilities</integration>
        <trigger-points>
          <point>pre-execution validation</point>
          <point>post-step verification</point>
          <point>error handling</point>
          <point>completion notification</point>
        </trigger-points>
      </automation-hooks>
    </usage-guidelines>
  </templates>

  <implementation>
    <customization-steps>
      <step>Replace all placeholder values with workflow-specific content</step>
      <step>Create accurate mermaid diagram reflecting actual flow</step>
      <step>Define specific quality thresholds and metrics</step>
      <step>Map automation hooks to available tools</step>
      <step>Test workflow documentation against actual implementation</step>
    </customization-steps>

    <validation-checklist>
      <item>All steps have clear success criteria</item>
      <item>Error paths are documented with recovery procedures</item>
      <item>Quality gates have measurable thresholds</item>
      <item>Dependencies are accurately listed and testable</item>
      <item>Troubleshooting covers common failure modes</item>
    </validation-checklist>
  </implementation>
</document>
