<?xml version="1.0" encoding="UTF-8"?>
<document type="constants" domain="operations" version="3.0" xmlns="https://ai-podcasts-nobody-knows.com/claude-docs">
    <metadata>
        <title>Operations Constants - Production Operations and System Management</title>
        <claude-optimization>true</claude-optimization>
    </metadata>

    <content>
        <section type="constants" id="environment-configuration">
            <technical-explanation>
                Python environment configuration standards defining version requirements, virtual environment setup, package management, and common dependencies. Ensures consistent development and production environments across all deployments.
            </technical-explanation>
            <simple-explanation>
                The basic setup requirements for your Python development environment - like the ingredients list and tools you need before starting to cook.
            </simple-explanation>

            <constants>
                <constant>
                    <name>PYTHON_VERSION</name>
                    <value>3.11+</value>
                    <description>Minimum Python version required</description>
                </constant>
                <constant>
                    <name>VIRTUAL_ENV_NAME</name>
                    <value>venv</value>
                    <description>Standard virtual environment directory name</description>
                </constant>
                <constant>
                    <name>PACKAGE_MANAGER</name>
                    <value>pip</value>
                    <description>Python package manager</description>
                </constant>
                <constant>
                    <name>REQUIREMENTS_FILE</name>
                    <value>requirements.txt</value>
                    <description>Dependencies specification file</description>
                </constant>
                <constant>
                    <name>ACTIVATION_UNIX</name>
                    <value>source venv/bin/activate</value>
                    <description>Virtual environment activation command for Unix/Linux/Mac</description>
                </constant>
                <constant>
                    <name>ACTIVATION_WINDOWS</name>
                    <value>venv\Scripts\activate</value>
                    <description>Virtual environment activation command for Windows</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="server-operations">
            <technical-explanation>
                Server configuration and operational commands for development and production deployments. Defines standard endpoints, ports, and startup procedures for the FastAPI application server.
            </technical-explanation>
            <simple-explanation>
                How to start, stop, and manage your server - like knowing how to turn your car on and off and where all the controls are.
            </simple-explanation>

            <constants>
                <constant>
                    <name>SERVER_START_DEV</name>
                    <value>uvicorn core.orchestration.server:app --reload</value>
                    <description>Development server startup command with auto-reload</description>
                </constant>
                <constant>
                    <name>SERVER_START_PROD</name>
                    <value>uvicorn core.orchestration.server:app --host 0.0.0.0 --port 8000</value>
                    <description>Production server startup command</description>
                </constant>
                <constant>
                    <name>SERVER_PORT</name>
                    <value>8000</value>
                    <description>Default server port</description>
                </constant>
                <constant>
                    <name>API_ROOT</name>
                    <value>http://localhost:8000</value>
                    <description>API root endpoint</description>
                </constant>
                <constant>
                    <name>API_DOCS</name>
                    <value>http://localhost:8000/docs</value>
                    <description>Interactive API documentation endpoint</description>
                </constant>
                <constant>
                    <name>API_HEALTH</name>
                    <value>http://localhost:8000/health</value>
                    <description>Health check endpoint</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="monitoring-logging">
            <technical-explanation>
                Logging configuration and monitoring standards including log levels, file locations, and monitoring commands. Enables comprehensive system observability and debugging capabilities.
            </technical-explanation>
            <simple-explanation>
                How to keep track of what your system is doing and find problems when they occur - like having a dashboard and diagnostic tools for your car.
            </simple-explanation>

            <constants>
                <constant>
                    <name>LOG_LEVEL_DEBUG</name>
                    <value>debug</value>
                    <description>Detailed debugging information</description>
                </constant>
                <constant>
                    <name>LOG_LEVEL_INFO</name>
                    <value>info</value>
                    <description>General information logging</description>
                </constant>
                <constant>
                    <name>LOG_LEVEL_WARNING</name>
                    <value>warning</value>
                    <description>Warning messages</description>
                </constant>
                <constant>
                    <name>LOG_LEVEL_ERROR</name>
                    <value>error</value>
                    <description>Error conditions</description>
                </constant>
                <constant>
                    <name>LOG_FILE_APPLICATION</name>
                    <value>logs/app.log</value>
                    <description>Main application log file</description>
                </constant>
                <constant>
                    <name>LOG_FILE_ERROR</name>
                    <value>logs/error.log</value>
                    <description>Error-specific log file</description>
                </constant>
                <constant>
                    <name>LOG_FILE_COSTS</name>
                    <value>logs/costs.log</value>
                    <description>Cost tracking log file</description>
                </constant>
                <constant>
                    <name>LOG_FILE_QUALITY</name>
                    <value>logs/quality.log</value>
                    <description>Quality metrics log file</description>
                </constant>
                <constant>
                    <name>MONITOR_TAIL_LOGS</name>
                    <value>tail -f logs/*.log</value>
                    <description>Command to monitor all logs in real-time</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="troubleshooting">
            <technical-explanation>
                Common issue identification and resolution procedures with specific error messages, solutions, and diagnostic commands. Provides systematic approach to problem resolution.
            </technical-explanation>
            <simple-explanation>
                Common problems and how to fix them - like a troubleshooting guide that tells you what to check when something doesn't work.
            </simple-explanation>

            <constants>
                <constant>
                    <name>FIX_PORT_IN_USE</name>
                    <value>lsof -ti:8000 | xargs kill -9</value>
                    <description>Kill process using port 8000</description>
                </constant>
                <constant>
                    <name>FIX_MISSING_DEPS</name>
                    <value>pip install -r requirements.txt</value>
                    <description>Install missing dependencies</description>
                </constant>
                <constant>
                    <name>FIX_ENV_INACTIVE</name>
                    <value>source venv/bin/activate</value>
                    <description>Activate virtual environment</description>
                </constant>
                <constant>
                    <name>FIX_API_KEYS</name>
                    <value>cp .env.example .env</value>
                    <description>Create environment file from template</description>
                </constant>
                <constant>
                    <name>DEBUG_CHECK_PYTHON</name>
                    <value>python --version</value>
                    <description>Check Python version</description>
                </constant>
                <constant>
                    <name>DEBUG_CHECK_ENV</name>
                    <value>echo $VIRTUAL_ENV</value>
                    <description>Check if virtual environment is active</description>
                </constant>
                <constant>
                    <name>DEBUG_TEST_SERVER</name>
                    <value>curl http://localhost:8000/health</value>
                    <description>Test server health endpoint</description>
                </constant>
            </constants>

            <validation>
                <validation-command>python --version | grep -E "3\.(11|12|13)"</validation-command>
                <validation-command>pip list | grep fastapi</validation-command>
                <success-criteria>Python 3.11+ installed and all dependencies available</success-criteria>
            </validation>
        </section>

        <section type="constants" id="cost-management">
            <technical-explanation>
                Cost tracking and management constants including logging formats, alert thresholds, and optimization strategies. Ensures budget compliance and cost efficiency.
            </technical-explanation>
            <simple-explanation>
                How to track and control spending - like having a budget tracker that warns you before you overspend.
            </simple-explanation>

            <constants>
                <constant>
                    <name>COST_LOG_FORMAT</name>
                    <value>ISO_DATE | SERVICE | OPERATION | COST | DETAILS</value>
                    <description>Standard format for cost logging entries</description>
                </constant>
                <constant>
                    <name>COST_DAILY_LIMIT</name>
                    <value>10.00</value>
                    <description>Daily cost limit in USD</description>
                </constant>
                <constant>
                    <name>COST_WEEKLY_LIMIT</name>
                    <value>50.00</value>
                    <description>Weekly cost limit in USD</description>
                </constant>
                <constant>
                    <name>COST_MONTHLY_LIMIT</name>
                    <value>200.00</value>
                    <description>Monthly cost limit in USD</description>
                </constant>
                <constant>
                    <name>COST_EPISODE_LIMIT</name>
                    <value>8.00</value>
                    <description>Per-episode cost limit in USD</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="security-operations">
            <technical-explanation>
                Security configuration standards including environment variable management, access control, and security checklist items. Ensures secure operation and data protection.
            </technical-explanation>
            <simple-explanation>
                Security rules to keep your system and data safe - like locking your doors and not sharing your passwords.
            </simple-explanation>

            <constants>
                <constant>
                    <name>ENV_FILE</name>
                    <value>.env</value>
                    <description>Environment variables file (never commit to git)</description>
                </constant>
                <constant>
                    <name>ENV_TEMPLATE</name>
                    <value>.env.example</value>
                    <description>Environment variables template file</description>
                </constant>
                <constant>
                    <name>GITIGNORE_ENV</name>
                    <value>.env</value>
                    <description>Ensure .env is in .gitignore</description>
                </constant>
                <constant>
                    <name>DEV_HOST</name>
                    <value>localhost</value>
                    <description>Development server host (local only)</description>
                </constant>
                <constant>
                    <name>PROD_HOST</name>
                    <value>0.0.0.0</value>
                    <description>Production server host (all interfaces)</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="performance-metrics">
            <technical-explanation>
                Performance targets and monitoring intervals defining acceptable system performance characteristics and measurement frequencies.
            </technical-explanation>
            <simple-explanation>
                Performance goals and how often to check them - like speed limits and regular car maintenance checks.
            </simple-explanation>

            <constants>
                <constant>
                    <name>RESPONSE_TIME_TARGET</name>
                    <value>5</value>
                    <description>Maximum response time in seconds</description>
                </constant>
                <constant>
                    <name>UPTIME_TARGET</name>
                    <value>99</value>
                    <description>Minimum uptime percentage</description>
                </constant>
                <constant>
                    <name>THROUGHPUT_TARGET</name>
                    <value>10</value>
                    <description>Episodes per hour throughput target</description>
                </constant>
                <constant>
                    <name>ERROR_RATE_TARGET</name>
                    <value>1</value>
                    <description>Maximum error rate percentage</description>
                </constant>
            </constants>
        </section>

        <section type="constants" id="development-tools">
            <technical-explanation>
                Development tool configuration including formatting, linting, testing, and type checking standards. Ensures code quality and consistency.
            </technical-explanation>
            <simple-explanation>
                Tools that help you write better code and catch mistakes early - like spell check and grammar tools for programming.
            </simple-explanation>

            <constants>
                <constant>
                    <name>FORMATTER</name>
                    <value>black</value>
                    <description>Python code formatter</description>
                </constant>
                <constant>
                    <name>FORMAT_COMMAND</name>
                    <value>black .</value>
                    <description>Format all Python files</description>
                </constant>
                <constant>
                    <name>LINTER</name>
                    <value>ruff</value>
                    <description>Python code linter</description>
                </constant>
                <constant>
                    <name>LINT_COMMAND</name>
                    <value>ruff check .</value>
                    <description>Lint all Python files</description>
                </constant>
                <constant>
                    <name>TEST_FRAMEWORK</name>
                    <value>pytest</value>
                    <description>Python testing framework</description>
                </constant>
                <constant>
                    <name>TEST_COMMAND</name>
                    <value>pytest tests/</value>
                    <description>Run all tests</description>
                </constant>
                <constant>
                    <name>COVERAGE_COMMAND</name>
                    <value>pytest --cov=core tests/</value>
                    <description>Run tests with coverage report</description>
                </constant>
            </constants>
        </section>
    </content>

    <cross-references>
        <reference file="../../global-constants.xml" section="constants" type="prerequisite">
            Global project constants
        </reference>
        <reference file="../foundation/project-constants.xml" section="constants" type="related">
            Foundation project constants
        </reference>
        <reference file="troubleshooting-guide.xml" section="troubleshooting" type="related">
            Detailed troubleshooting procedures
        </reference>
        <reference file="production-checklist.xml" section="checklist" type="related">
            Production deployment checklist
        </reference>
    </cross-references>
</document>
