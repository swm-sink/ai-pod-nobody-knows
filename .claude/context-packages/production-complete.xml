<?xml version="1.0" encoding="UTF-8"?>
<document type="context-package" domain="production" version="1.0" xmlns="https://ai-podcasts-nobody-knows.com/claude-docs">
    <metadata>
        <title>Complete Production Context Package</title>
        <purpose>Self-contained context for episode production operations</purpose>
        <claude-optimization>true</claude-optimization>
        <completeness>100% - No external references required</completeness>
        <target-tokens>8000-12000</target-tokens>
        <usage>Load via @production-complete for all podcast production tasks</usage>
    </metadata>

    <content>
        <!-- EMBEDDED PRODUCTION CONSTANTS -->
        <section type="constants" id="production-constants">
            <technical-explanation>
                Production constants define the complete configuration for podcast episode creation, including TTS models, quality thresholds, cost targets, and file naming conventions. These values are embedded here for complete LLM context without external lookups.
            </technical-explanation>
            <simple-explanation>
                These are all the specific settings and numbers the AI needs to make podcasts correctly - like recipe measurements that need to be exact every time.
            </simple-explanation>

            <constants>
                <constant>
                    <name>TTS_MODEL</name>
                    <value>eleven_turbo_v2_5</value>
                    <description>ElevenLabs Turbo v2.5 - Final decision after comprehensive research</description>
                </constant>
                <constant>
                    <name>TTS_VOICE</name>
                    <value>Amelia (ZF6FPAbjXT4488VcRRnw)</value>
                    <description>Selected voice optimized for narrative podcast content</description>
                </constant>
                <constant>
                    <name>EPISODE_TARGET_DURATION</name>
                    <value>25-30 minutes</value>
                    <description>Target duration for each episode</description>
                </constant>
                <constant>
                    <name>EPISODE_TARGET_CHARACTERS</name>
                    <value>18000-22000</value>
                    <description>Character count for target duration</description>
                </constant>
                <constant>
                    <name>COST_TARGET_PER_EPISODE</name>
                    <value>$4-5</value>
                    <description>Target cost per episode (vs traditional $800-3500)</description>
                </constant>
                <constant>
                    <name>QUALITY_THRESHOLD_COMPREHENSION</name>
                    <value>0.85</value>
                    <description>Minimum comprehension score for general audience</description>
                </constant>
                <constant>
                    <name>QUALITY_THRESHOLD_BRAND</name>
                    <value>0.90</value>
                    <description>Minimum brand consistency score for intellectual humility theme</description>
                </constant>
                <constant>
                    <name>QUALITY_THRESHOLD_ENGAGEMENT</name>
                    <value>0.80</value>
                    <description>Minimum engagement score to maintain listener interest</description>
                </constant>
                <constant>
                    <name>QUALITY_THRESHOLD_TECHNICAL</name>
                    <value>0.85</value>
                    <description>Minimum technical accuracy score for factual correctness</description>
                </constant>
            </constants>
        </section>

        <!-- EMBEDDED AGENT SPECIFICATIONS -->
        <section type="agents" id="production-agents">
            <technical-explanation>
                The production pipeline uses a 4-agent system with orchestration: Research Coordinator, Script Writer, Audio Synthesizer, and Quality Evaluator. Each agent has specific prompts, input/output formats, and quality criteria embedded here for complete operational context.
            </technical-explanation>
            <simple-explanation>
                Think of this as four AI specialists working together like a podcast production team - one gathers information, one writes the script, one creates the audio, and one checks the quality.
            </simple-explanation>

            <agent>
                <name>Research Coordinator</name>
                <role>Gather and synthesize information for episode topics</role>
                <input>Topic description, research requirements</input>
                <output>Structured research package with facts, quotes, examples</output>
                <quality-criteria>Accuracy ≥0.90, Source diversity ≥3, Fact verification required</quality-criteria>
            </agent>

            <agent>
                <name>Script Writer</name>
                <role>Create engaging podcast script from research</role>
                <input>Research package, episode structure template</input>
                <output>Conversational script with intellectual humility theme</output>
                <quality-criteria>Comprehension ≥0.85, Brand consistency ≥0.90, Flow score ≥0.80</quality-criteria>
            </agent>

            <agent>
                <name>Audio Synthesizer</name>
                <role>Convert script to high-quality audio</role>
                <input>Final approved script</input>
                <output>MP3 file using ElevenLabs Turbo v2.5 with Amelia voice</output>
                <quality-criteria>No synthesis errors, proper pacing, consistent voice</quality-criteria>
            </agent>

            <agent>
                <name>Quality Evaluator</name>
                <role>Assess output against all quality thresholds</role>
                <input>Script, audio file, production metrics</input>
                <output>Quality scores and approval/rejection decision</output>
                <quality-criteria>All thresholds met: Comprehension, Brand, Engagement, Technical</quality-criteria>
            </agent>
        </section>

        <!-- EMBEDDED PRODUCTION WORKFLOW -->
        <section type="workflow" id="production-process">
            <technical-explanation>
                The production workflow implements a sequential pipeline with quality gates, retry logic, and atomic commits. Each step validates inputs, executes the operation, validates outputs, and hands off to the next stage only upon successful completion.
            </technical-explanation>
            <simple-explanation>
                Like an assembly line where each station checks the quality before passing the work to the next station, and if something's wrong, it goes back to be fixed.
            </simple-explanation>

            <steps>
                <step number="1">
                    <action>Research Phase</action>
                    <agent>Research Coordinator</agent>
                    <validation>Fact-checking, source verification, completeness check</validation>
                    <success-criteria>Research package with ≥3 diverse sources, all facts verified</success-criteria>
                    <failure-handling>Retry with expanded search terms, additional sources</failure-handling>
                </step>

                <step number="2">
                    <action>Script Creation</action>
                    <agent>Script Writer</agent>
                    <validation>Quality evaluation against all thresholds</validation>
                    <success-criteria>All quality scores ≥ minimum thresholds</success-criteria>
                    <failure-handling>Revise script, retry up to 3 times, escalate if needed</failure-handling>
                </step>

                <step number="3">
                    <action>Audio Synthesis</action>
                    <agent>Audio Synthesizer</agent>
                    <validation>Audio quality check, duration verification</validation>
                    <success-criteria>Clean audio file, target duration achieved</success-criteria>
                    <failure-handling>Regenerate audio, adjust script if necessary</failure-handling>
                </step>

                <step number="4">
                    <action>Final Quality Check</action>
                    <agent>Quality Evaluator</agent>
                    <validation>Comprehensive quality assessment</validation>
                    <success-criteria>All quality thresholds met, episode approved</success-criteria>
                    <failure-handling>Return to appropriate stage for revision</failure-handling>
                </step>
            </steps>
        </section>

        <!-- EMBEDDED TROUBLESHOOTING -->
        <section type="troubleshooting" id="production-troubleshooting">
            <technical-explanation>
                Common production issues include API failures, quality threshold failures, cost overruns, and timing issues. Each problem type has specific diagnostic steps and resolution procedures embedded here for immediate LLM access.
            </technical-explanation>
            <simple-explanation>
                When things go wrong during podcast creation, these are the specific problems you might encounter and exactly how to fix them.
            </simple-explanation>

            <issue>
                <problem>ElevenLabs API Failure</problem>
                <symptoms>Audio synthesis step fails, API timeout errors</symptoms>
                <diagnosis>Check API key, verify credit balance, test with shorter text</diagnosis>
                <resolution>Retry with exponential backoff, split text if too long, verify credentials</resolution>
            </issue>

            <issue>
                <problem>Quality Threshold Failure</problem>
                <symptoms>Script or audio doesn't meet minimum quality scores</symptoms>
                <diagnosis>Identify which threshold failed, analyze specific issues</diagnosis>
                <resolution>Revise content, adjust prompts, retry with improvements</resolution>
            </issue>

            <issue>
                <problem>Cost Overrun</problem>
                <symptoms>Episode cost exceeds $5 target</symptoms>
                <diagnosis>Review token usage, API calls, TTS character count</diagnosis>
                <resolution>Optimize prompts, reduce script length, batch operations</resolution>
            </issue>
        </section>

        <!-- EMBEDDED EPISODE TEMPLATE -->
        <section type="template" id="episode-structure">
            <technical-explanation>
                Standard episode structure optimized for the "Nobody Knows" podcast theme of intellectual humility. Template includes specific segment types, timing guidelines, and transition patterns for consistent quality.
            </technical-explanation>
            <simple-explanation>
                This is the basic recipe for every podcast episode - the standard ingredients and order that makes each episode feel consistent and professional.
            </simple-explanation>

            <structure>
                <segment name="Introduction" duration="2-3 minutes">
                    <purpose>Hook listeners, introduce topic, set expectations</purpose>
                    <style>Conversational, curious, humble approach to complex topics</style>
                    <elements>Topic introduction, why it matters, what we'll explore</elements>
                </segment>

                <segment name="Core Content" duration="18-22 minutes">
                    <purpose>Explore the topic with intellectual humility</purpose>
                    <style>Balanced perspective, acknowledge unknowns, multiple viewpoints</style>
                    <elements>Key concepts, examples, what we know vs don't know</elements>
                </segment>

                <segment name="Conclusion" duration="3-5 minutes">
                    <purpose>Synthesize insights, acknowledge limitations, inspire curiosity</purpose>
                    <style>Reflective, encouraging further exploration</style>
                    <elements>Key takeaways, remaining questions, call to curiosity</elements>
                </segment>
            </structure>
        </section>
    </content>
</document>
