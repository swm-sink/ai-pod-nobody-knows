# Compatibility Matrix for Level-1-Dev Components
# Defines which component versions are compatible with each other
# Critical for preventing breaking changes from disrupting the system

matrix_version: "1.0.0"
last_updated: "2025-08-16"

# Core compatibility rules
compatibility_rules:
  # Commands depend on agents
  command_agent_dependencies:
    agent-builder-dev:
      requires:
        - component: agent-template
          min_version: "0.1.0"
          max_version: "1.x.x"

    context-researcher-dev:
      requires:
        - component: file-validator
          min_version: "0.1.0"
          max_version: "1.x.x"

    session-manager:
      requires: []  # No agent dependencies

    test-workflow:
      requires:
        - component: test-agent
          min_version: "0.1.0"
          max_version: "1.x.x"

    validate-project-structure:
      requires:
        - component: file-validator
          min_version: "0.1.0"
          max_version: "1.x.x"

  # Test framework dependencies
  test_dependencies:
    test-utils:
      compatible_with:
        - component: run-all-tests
          versions: ["0.1.x", "1.x.x"]
        - component: coverage
          versions: ["0.1.x", "1.x.x"]

    coverage:
      requires:
        - component: test-utils
          min_version: "0.1.0"

  # Template dependencies
  template_dependencies:
    agent-template:
      used_by:
        - agent-builder-dev
        - command-builder-dev
      version_constraints:
        breaking_changes_at: ["1.0.0", "2.0.0"]

    command-template:
      used_by:
        - command-builder-dev
      version_constraints:
        breaking_changes_at: ["1.0.0"]

# Component interaction matrix
# Shows which components directly interact
interaction_matrix:
  agents:
    test-agent:
      interacts_with: ["test-workflow", "run-all-tests"]
      interaction_type: "testing"

    file-validator:
      interacts_with: ["context-researcher-dev", "validate-project-structure"]
      interaction_type: "validation"

  commands:
    agent-builder-dev:
      creates: ["agents"]
      uses: ["agent-template"]

    command-builder-dev:
      creates: ["commands"]
      uses: ["command-template", "agent-template"]

    context-researcher-dev:
      analyzes: ["all_components"]
      outputs: ["documentation"]

    session-manager:
      manages: ["conversation_state"]
      independent: true

    test-workflow:
      tests: ["workflows"]
      uses: ["test-agent"]

    validate-project-structure:
      validates: ["project_structure"]
      uses: ["file-validator"]

# Version compatibility groups
# Components in the same group should be updated together
compatibility_groups:
  testing_suite:
    components:
      - test-utils
      - run-all-tests
      - coverage
      - test-agent
      - test-workflow
    update_policy: "synchronized"
    notes: "Test components should maintain version parity"

  builder_tools:
    components:
      - agent-builder-dev
      - command-builder-dev
      - agent-template
      - command-template
    update_policy: "coordinated"
    notes: "Builder tools and templates must stay compatible"

  validation_tools:
    components:
      - file-validator
      - validate-project-structure
      - context-researcher-dev
    update_policy: "independent"
    notes: "Can be updated independently with proper testing"

# Breaking change impact analysis
breaking_changes:
  # Record of breaking changes and their impacts
  history:
    - version: "1.0.0"
      component: "agent-template"
      date: "2025-08-16"
      impacts:
        - agent-builder-dev
        - command-builder-dev
      migration_required: true
      migration_script: "migrate-agent-template-1.0.0.sh"

  # Planned breaking changes
  planned:
    - version: "2.0.0"
      component: "test-utils"
      target_date: "2025-09-01"
      reason: "Refactor assertion library for better error messages"
      impacts:
        - run-all-tests
        - coverage
        - all test scripts
      migration_path: "Will provide automated migration script"

# Validation rules for compatibility
validation_rules:
  - rule: "version_format"
    description: "All versions must follow semantic versioning"
    pattern: "^\\d+\\.\\d+\\.\\d+$"

  - rule: "dependency_exists"
    description: "All declared dependencies must exist"
    enforcement: "strict"

  - rule: "circular_dependency"
    description: "No circular dependencies allowed"
    enforcement: "strict"

  - rule: "group_coherence"
    description: "Components in same group must be compatible"
    enforcement: "warning"

# Compatibility check queries
# Pre-defined queries for common compatibility checks
queries:
  can_update:
    description: "Check if a component can be safely updated"
    checks:
      - dependency_versions
      - breaking_changes
      - group_compatibility

  find_conflicts:
    description: "Find all compatibility conflicts"
    returns:
      - conflicting_components
      - conflict_reasons
      - suggested_resolutions

  upgrade_path:
    description: "Find safe upgrade path for component"
    considers:
      - current_version
      - target_version
      - intermediate_steps
      - migration_requirements
