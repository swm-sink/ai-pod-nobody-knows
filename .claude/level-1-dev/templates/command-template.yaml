# Command Template
# Use this template when creating new commands with command-builder-dev or command-builder-production

metadata:
  name: "[command-name]"
  level: "[1-dev|2-production|3-platform|4-coded]"
  version: "1.0.0"
  created: "[YYYY-MM-DD]"
  author: "[creator]"
  type: "[orchestration|utility|analysis|generation]"

specification:
  purpose: "[What this command accomplishes]"
  trigger: "/[command-name] [arguments]"
  arguments:
    - name: "$ARGUMENTS"
      description: "[What arguments represent]"
      required: true
      format: "[expected format]"

workflow:
  initialization:
    - action: "[setup step 1]"
      validation: "[check]"
    - action: "[setup step 2]"
      validation: "[check]"

  stages:
    - stage: "[Stage 1 Name]"
      agent: "[agent to use or 'direct']"
      inputs:
        - source: "[where input comes from]"
          type: "[data type]"
      processing:
        - step: "[action 1]"
          timeout: "[seconds]"
        - step: "[action 2]"
          timeout: "[seconds]"
      quality_gates:
        - gate: "[metric]"
          threshold: "[value]"
          action_on_fail: "[stop|retry|continue]"
      outputs:
        - name: "[output name]"
          location: "[where saved]"
          format: "[structure]"
      cost_limit: "[dollar amount]"

    - stage: "[Stage 2 Name]"
      agent: "[agent to use]"
      depends_on: "[previous stage]"
      inputs:
        - source: "[previous stage output]"
          type: "[data type]"
      processing:
        - step: "[action]"
          timeout: "[seconds]"
      quality_gates:
        - gate: "[metric]"
          threshold: "[value]"
      outputs:
        - name: "[output name]"
          location: "[where saved]"
      cost_limit: "[dollar amount]"

  finalization:
    - action: "[cleanup step 1]"
    - action: "[archive results]"
    - action: "[generate report]"

orchestration:
  execution_mode: "[sequential|parallel|mixed]"
  parallelism:
    max_concurrent: 5
    batch_size: 10
  dependencies:
    - stage: "[stage name]"
      requires: "[other stage]"

error_recovery:
  retry_strategy:
    max_attempts: 3
    backoff: "[exponential|linear]"
    delays: [30, 60, 120]
  failure_handling:
    - stage: "[stage name]"
      on_failure: "[action]"
      fallback: "[alternative]"
  save_progress: true
  resume_capability: true

monitoring:
  tracking:
    - metric: "cost"
      alert_threshold: "[amount]"
    - metric: "time"
      alert_threshold: "[minutes]"
    - metric: "quality"
      alert_threshold: "[score]"
  logging:
    level: "[debug|info|warning|error]"
    location: "[log path]"
  reporting:
    - type: "progress"
      frequency: "per_stage"
    - type: "summary"
      frequency: "on_complete"

integration:
  session_management:
    track_in_session: true
    session_type: "[dev|production|platform]"
  todo_updates:
    update_on_complete: true
    create_followup_tasks: true
  quality_tracking:
    record_metrics: true
    aggregate_scores: true

success_criteria:
  - criterion: "[measurable outcome 1]"
    verification: "[how to verify]"
  - criterion: "[measurable outcome 2]"
    verification: "[how to verify]"

cost_budget:
  total_limit: "[dollar amount]"
  breakdown:
    - operation: "[operation type]"
      limit: "[amount]"
  alert_at_percentage: 80

testing:
  test_cases:
    - name: "[test 1]"
      input: "[test data]"
      expected: "[result]"
    - name: "[test 2]"
      input: "[test data]"
      expected: "[result]"
  dry_run_mode: true

notes: |
  [Additional context, best practices, warnings]
