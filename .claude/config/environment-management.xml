<?xml version="1.0" encoding="UTF-8"?>
<document type="reference">
  <metadata>
    <title>Environment and API Key Management Guide</title>
    <domain>configuration</domain>
    <version>1.0</version>
    <last-updated>2025-08-11</last-updated>
  </metadata>

  <content>
    <section id="security-approach">
      <title>Security-First Approach</title>
      <technical-explanation>
        Multi-layered secret management with environment isolation, key rotation policies, and audit trails
      </technical-explanation>
      <simple-explanation>
        Like having different safes for different valuables - each with its own combination and access log
      </simple-explanation>
      <learning-value>
        This teaches enterprise-grade security practices essential for production systems
      </learning-value>
    </section>

    <section id="configuration-structure">
      <title>Configuration Structure</title>
      <file-structure>
        <file path=".env" purpose="Local development keys" security="NEVER commit"/>
        <file path=".env.example" purpose="Template for team" security="safe to commit"/>
        <file path=".env.development" purpose="Dev environment settings" optional="true"/>
        <file path=".env.production" purpose="Production settings" management="separate"/>
        <directory path=".claude/config/">
          <file path="mcp-config.json" purpose="MCP server configurations"/>
          <file path="cost-limits.json" purpose="Cost management rules"/>
          <file path="quality-gates.json" purpose="Quality thresholds"/>
        </directory>
        <directory path=".claude/settings/">
          <file path="local.json" purpose="Claude Code local settings"/>
        </directory>
      </file-structure>
    </section>

    <section id="api-key-management">
      <title>API Key Management</title>

      <security-warning>
        CRITICAL: API keys must NEVER be stored in documentation or committed to version control.
        Store all keys in .env file and reference them via environment variables.
      </security-warning>

      <key-storage>
        <rule>All API keys stored in .env file only</rule>
        <rule>Use environment variables: process.env.KEY_NAME</rule>
        <rule>Never hardcode keys in code or documentation</rule>
      </key-storage>

      <rotation-schedule>
        <environment name="development" frequency="90 days"/>
        <environment name="production" frequency="30 days"/>
        <environment name="compromised" frequency="immediately"/>
      </rotation-schedule>

      <rotation-process>
        <step number="1">Generate new key from provider dashboard</step>
        <step number="2">Update .env file locally</step>
        <step number="3">Test with minimal API call</step>
        <step number="4">Update Claude Code MCP config</step>
        <step number="5">Archive old key (mark as rotated)</step>
        <step number="6">Update team documentation</step>
      </rotation-process>
    </section>

    <section id="scalability-patterns">
      <title>Scalability Patterns</title>

      <pattern name="Development">
        <description>Single .env file with all keys</description>
        <pros>Simple setup, quick iteration</pros>
        <cons>All keys in one place</cons>
      </pattern>

      <pattern name="Staging">
        <description>Separate .env files per environment</description>
        <pros>Environment isolation</pros>
        <cons>More files to manage</cons>
      </pattern>

      <pattern name="Production">
        <description>Secret management service (AWS Secrets, Vault)</description>
        <pros>Centralized, audited, rotatable</pros>
        <cons>More complex setup</cons>
      </pattern>
    </section>

    <section id="claude-code-integration">
      <title>Claude Code MCP Integration</title>

      <setup-steps>
        <step number="1">Configure MCP servers in mcp-config.json</step>
        <step number="2">Set environment variables in .env</step>
        <step number="3">Restart Claude Code to load new config</step>
        <step number="4">Verify with claude mcp list</step>
      </setup-steps>

      <example>
        <code language="json">
{
  "mcpServers": {
    "perplexity": {
      "command": "node",
      "args": ["perplexity-server.js"],
      "env": {
        "PERPLEXITY_API_KEY": "${PERPLEXITY_API_KEY}"
      }
    }
  }
}
        </code>
      </example>
    </section>

    <section id="best-practices">
      <title>Environment Management Best Practices</title>

      <practice>
        <rule>Never commit .env files</rule>
        <rule>Always provide .env.example</rule>
        <rule>Use descriptive key names</rule>
        <rule>Document required keys in README</rule>
        <rule>Implement key rotation reminders</rule>
        <rule>Use different keys per environment</rule>
        <rule>Monitor API usage and costs</rule>
        <rule>Set up alerts for unusual activity</rule>
      </practice>
    </section>
  </content>

  <cross-references>
    <reference target="../context/operations/04_mcp_quick_setup.xml">MCP Quick Setup Guide</reference>
    <reference target="../context/operations/cost_optimization_strategies.xml">Cost Management</reference>
    <reference target="../context/quality/validation_requirements.xml">Security Validation</reference>
  </cross-references>
</document>
